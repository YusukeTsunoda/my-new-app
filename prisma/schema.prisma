// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  avatar    String?
  role      UserRole @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sessions Session[]
  quizzes  Quiz[]
  results  QuizResult[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Quiz {
  id          String   @id @default(cuid())
  title       String
  description String?
  difficulty  Difficulty @default(MEDIUM)
  timeLimit   Int?     // seconds
  passingScore Int?    // percentage
  isPublished Boolean  @default(false)
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  creator   User         @relation(fields: [createdBy], references: [id])
  questions Question[]
  results   QuizResult[]

  @@map("quizzes")
}

model Question {
  id            String   @id @default(cuid())
  quizId        String
  question      String
  options       String   // JSON array
  correctAnswer Int
  explanation   String?
  order         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model QuizResult {
  id              String   @id @default(cuid())
  quizId          String
  userId          String
  score           Int
  totalQuestions  Int
  correctAnswers  Int
  percentage      Float
  timeSpent       Int      // milliseconds
  answers         String   // JSON array of UserAnswer
  completedAt     DateTime @default(now())

  // Relations
  quiz Quiz @relation(fields: [quizId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("quiz_results")
}

enum UserRole {
  USER
  ADMIN
  MODERATOR
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}
